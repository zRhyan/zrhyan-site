/* src/styles/global.css */
@import "tailwindcss";

/* Step 1: Set dark mode to use class strategy in Astro Tailwind setup. */
/* You don't need to change tailwind.config.js since Tailwind v4 uses CSS-first. */
/* Define custom dark variant selector using @custom-variant */

@custom-variant dark (&:where(.dark, .dark *));

/* Step 2: Define core color palette as theme variables */
@theme {
  --color-primary: #1E3A8A; /* Dark blue */
  --color-secondary: #EF4444; /* Red */
  --color-black: #000000;
  --color-white: #FFFFFF;
}

/* Step 3: Define dark/light mode behavior globally */

body {
  background-color: white;
  color: black;
  transition: background-color 0.3s ease, color 0.3s ease;
}

html.dark body {
  background-color: black;
  color: white;
}

header,
nav#mobile-menu,
footer {
  background-color: white;
  color: black;
  transition: background-color 0.3s ease, color 0.3s ease;
}

html.dark header,
html.dark nav#mobile-menu,
html.dark footer {
  background-color: black;
  color: white;
}

/* Step 4: Add elegant gradient border styling */
html.dark .gradient-border {
  border-image: linear-gradient(
    to right,
    var(--color-secondary) 0%,
    #B91C1C 40%,
    #000000 50%,
    #15295F 60%,
    var(--color-primary) 100%
  ) 1;
}

.gradient-border {
  border-image: linear-gradient(
    to right,
    var(--color-primary) 0%,
    #15295F 40%,
    var(--color-white) 50%,
    #B91C1C 60%,
    var(--color-secondary) 100%
  ) 1;
}

/* Step 5: Skeleton loader styling */
.skeleton {
  background: #e5e7eb;
  border-radius: 0.5rem;
  animation: pulse 1.5s infinite;
}

html.dark .skeleton {
  background: #374151;
}

@keyframes pulse {
  0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; }
}
